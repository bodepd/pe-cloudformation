{
 "Parameters" : {
    "KeyName": {
      "Description": "Name of aws keypair to be used",
      "Type": "String"
    },
    "PEId" : {
      "Description" : "ID",
      "Type" : "String",
      "Default" : "puppet-enterprise-2.0rc1-62-g98b928c-el-6-i386"
    },
    "Payload" : {
      "Description" : "URL of PE installer payload",
      "Type" : "String",
      "Default" : "https://s3.amazonaws.com/cloud-formation-pe/puppet-enterprise-2.0rc1-62-g98b928c-el-6-i386.tar.gz"
    },
    "MasterAnswersFile" : {
      "Description": "URL where master answers file can be downloaded from",
      "Type" : "String",
      "Default" : "https://s3.amazonaws.com/cloud-formation-pe/full.answers"
    },
    "AgentAnswersFile" : {
      "Description": "URL where agent answers file can be downloaded from",
      "Type" : "String",
      "Default" : "https://s3.amazonaws.com/cloud-formation-pe/agent.answers"
    }
  },
  "Resources" : {
    "PuppetMasterSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription" : "Allows communication to the puppet master",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" :  "8140", "ToPort" : "8140", "SourceSecurityGroupName" : { "Ref" : "PuppetClientSecurityGroup" }},
          { "IpProtocol" : "tcp", "FromPort" :  "61613", "ToPort" : "61613", "SourceSecurityGroupName" : { "Ref" : "PuppetClientSecurityGroup" }},
          { "IpProtocol" : "tcp", "FromPort" : "3000", "ToPort" : "3000", "CidrIp": "0.0.0.0/0"},
          { "IpProtocol" : "tcp", "FromPort" : "3001", "ToPort" : "3001", "CidrIp": "0.0.0.0/0"},
          { "IpProtocol" : "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0" }
        ]
      }
    },
    "PuppetClientSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription" : "Allows ssh connections to the agents",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0" }
        ]
      }
    },
    "CFNInitUser" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Policies": [{
          "PolicyName": "AccessForCFNInit",
          "PolicyDocument" : {
            "Statement": [{
              "Effect"   : "Allow",
              "Action"   : "cloudformation:DescribeStackResource",
              "Resource" : "*"
             }]
          }
        }]
      }
    },
    "CFNKeys" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : { "Ref": "CFNInitUser" }
      }
    },
    "PuppetMasterInstance": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "system-logos" : []
              }
            },
            "sources": {
              "/root/": {"Ref" : "Payload"}
            },
            "files": {
              "/root/answers": {
                "source" : { "Ref" : "MasterAnswersFile" }
              },
              "/etc/puppetlabs/puppet/autosign.conf" : {
                "content" : "*"
              },
              "/etc/cfn/hooks.d/sign-client-certificate.conf": {
                "content" : { "Fn::Join" : ["", [
                  "[cfn-sign-cert-hook]\n",
                    "triggers=post.add\n",
                    "path=Resources.WebServer.Metadata.AWS::CloudFormation::Init\n",
                    "action=/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackName" }, " -r PuppetClientInstance1 ",
                        "  --access-key ", { "Ref" : "CFNKeys" },
                        "  --secret-key ", {"Fn::GetAtt": ["CFNKeys", "SecretAccessKey"]},
                        "  --region     ", { "Ref" : "AWS::Region" }, "\n",
                    "runas=root\n"]]
                }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": "m1.small",
        "ImageId": "ami-7f418316",
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups":  [ { "Ref" : "PuppetMasterSecurityGroup" } ],
          "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash\n",
            "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
            "    -s ", { "Ref" : "AWS::StackName" }, " -r PuppetMasterInstance ",
            "    --access-key ", { "Ref" : "CFNKeys" },
            "    --secret-key ", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]}, "\n",
            "/root/", {"Ref" : "PEId"},"/puppet-enterprise-installer -a /root/answers -D  >& /tmp/pe-install.txt",  "\n",
            "/opt/puppet/bin/htpasswd -cb /etc/puppetlabs/httpd/dashboardpass puppet-user puppet-password", "\n",
            "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "PuppetMasterWaitHandle" }, "'\n",
            "\n" ]]}}
      }
    },
    "PuppetClientInstance1": {
      "Type": "AWS::EC2::Instance",
      "DependsOn" : "PuppetMasterWaitCondition",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "sources": {
              "/root/":  { "Ref" : "Payload" }
            },
            "files": {
              "/root/answers": {
                "source" : {"Ref" : "AgentAnswersFile"}
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": "t1.micro",
        "ImageId": "ami-7f418316",
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups":  [ { "Ref" : "PuppetClientSecurityGroup" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash\n",
            "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
            "    -s ", { "Ref" : "AWS::StackName" }, " -r PuppetClientInstance1 ",
            "    --access-key ", { "Ref" : "CFNKeys" },
            "    --secret-key ", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]}, "\n",
            "echo 'q_puppetagent_server=", { "Fn::GetAtt" : [ "PuppetMasterInstance", "PrivateDnsName" ] } ,"' >> /root/answers", "\n",
            "/root/", {"Ref" : "PEId"},"/puppet-enterprise-installer -a /root/answers -D  >& /tmp/pe-install.txt",  "\n",
            "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "PuppetClientWaitHandle" }, "'\n",
            "\n" ]]}}
      }
    },
    "PuppetClientInstance2": {
      "Type": "AWS::EC2::Instance",
      "DependsOn" : "PuppetMasterWaitCondition",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "sources": {
              "/root/":  { "Ref" : "Payload" }
            },
            "files": {
              "/root/answers": {
                "source" : { "Ref" : "AgentAnswersFile" }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": "t1.micro",
        "ImageId": "ami-7f418316",
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups":  [ { "Ref" : "PuppetClientSecurityGroup" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash\n",
            "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
            "    -s ", { "Ref" : "AWS::StackName" }, " -r PuppetClientInstance2 ",
            "    --access-key ", { "Ref" : "CFNKeys" },
            "    --secret-key ", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]}, "\n",
            "echo 'q_puppetagent_server=", { "Fn::GetAtt" : [ "PuppetMasterInstance", "PrivateDnsName" ] } ,"' >> /root/answers", "\n",
            "/root/", {"Ref" : "PEId"},"/puppet-enterprise-installer -a /root/answers -D  >& /tmp/pe-install.txt",  "\n",
            "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "PuppetClientWaitHandle" }, "'\n",
            "\n" ]]}}
      }
    },
    "PuppetClientInstance3": {
      "Type": "AWS::EC2::Instance",
      "DependsOn" : "PuppetMasterWaitCondition",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "sources": {
              "/root/":  { "Ref" : "Payload" }
            },
            "files": {
              "/root/answers": {
                "source" : { "Ref" : "AgentAnswersFile" }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": "t1.micro",
        "ImageId": "ami-7f418316",
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups":  [ { "Ref" : "PuppetClientSecurityGroup" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash\n",
            "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
            "    -s ", { "Ref" : "AWS::StackName" }, " -r PuppetClientInstance3 ",
            "    --access-key ", { "Ref" : "CFNKeys" },
            "    --secret-key ", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]}, "\n",
            "echo 'q_puppetagent_server=", { "Fn::GetAtt" : [ "PuppetMasterInstance", "PrivateDnsName" ] } ,"' >> /root/answers", "\n",
            "/root/", {"Ref" : "PEId"},"/puppet-enterprise-installer -a /root/answers -D  >& /tmp/pe-install.txt",  "\n",
            "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "PuppetClientWaitHandle" }, "'\n",
            "\n" ]]}}
      }
    },
    "PuppetClientInstance4": {
      "Type": "AWS::EC2::Instance",
      "DependsOn" : "PuppetMasterWaitCondition",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "sources": {
              "/root/":  { "Ref" : "Payload" }
            },
            "files": {
              "/root/answers": {
                "source" : { "Ref" : "AgentAnswersFile" }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": "t1.micro",
        "ImageId": "ami-7f418316",
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups":  [ { "Ref" : "PuppetClientSecurityGroup" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash\n",
            "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
            "    -s ", { "Ref" : "AWS::StackName" }, " -r PuppetClientInstance4 ",
            "    --access-key ", { "Ref" : "CFNKeys" },
            "    --secret-key ", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]}, "\n",
            "echo 'q_puppetagent_server=", { "Fn::GetAtt" : [ "PuppetMasterInstance", "PrivateDnsName" ] } ,"' >> /root/answers", "\n",
            "/root/", {"Ref" : "PEId"},"/puppet-enterprise-installer -a /root/answers -D  >& /tmp/pe-install.txt",  "\n",
            "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "PuppetClientWaitHandle" }, "'\n",
            "\n" ]]}}
      }
    },
    "PuppetClientInstance5": {
      "Type": "AWS::EC2::Instance",
      "DependsOn" : "PuppetMasterWaitCondition",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "sources": {
              "/root/":  { "Ref" : "Payload" }
            },
            "files": {
              "/root/answers": {
                "source" : { "Ref" : "AgentAnswersFile" }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": "t1.micro",
        "ImageId": "ami-7f418316",
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups":  [ { "Ref" : "PuppetClientSecurityGroup" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash\n",
            "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
            "    -s ", { "Ref" : "AWS::StackName" }, " -r PuppetClientInstance5 ",
            "    --access-key ", { "Ref" : "CFNKeys" },
            "    --secret-key ", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]}, "\n",
            "echo 'q_puppetagent_server=", { "Fn::GetAtt" : [ "PuppetMasterInstance", "PrivateDnsName" ] } ,"' >> /root/answers", "\n",
            "/root/", {"Ref" : "PEId"},"/puppet-enterprise-installer -a /root/answers -D  >& /tmp/pe-install.txt",  "\n",
            "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "PuppetClientWaitHandle" }, "'\n",
            "\n" ]]}}
      }
    },
    "PuppetClientInstance6": {
      "Type": "AWS::EC2::Instance",
      "DependsOn" : "PuppetMasterWaitCondition",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "sources": {
              "/root/":  { "Ref" : "Payload" }
            },
            "files": {
              "/root/answers": {
                "source" : { "Ref" : "AgentAnswersFile" }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": "t1.micro",
        "ImageId": "ami-7f418316",
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups":  [ { "Ref" : "PuppetClientSecurityGroup" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash\n",
            "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
            "    -s ", { "Ref" : "AWS::StackName" }, " -r PuppetClientInstance6 ",
            "    --access-key ", { "Ref" : "CFNKeys" },
            "    --secret-key ", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]}, "\n",
            "echo 'q_puppetagent_server=", { "Fn::GetAtt" : [ "PuppetMasterInstance", "PrivateDnsName" ] } ,"' >> /root/answers", "\n",
            "/root/", {"Ref" : "PEId"},"/puppet-enterprise-installer -a /root/answers -D  >& /tmp/pe-install.txt",  "\n",
            "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "PuppetClientWaitHandle" }, "'\n",
            "\n" ]]}}
      }
    },
    "PuppetClientInstance7": {
      "Type": "AWS::EC2::Instance",
      "DependsOn" : "PuppetMasterWaitCondition",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "sources": {
              "/root/":  { "Ref" : "Payload" }
            },
            "files": {
              "/root/answers": {
                "source" : { "Ref" : "AgentAnswersFile" }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": "t1.micro",
        "ImageId": "ami-7f418316",
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups":  [ { "Ref" : "PuppetClientSecurityGroup" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash\n",
            "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
            "    -s ", { "Ref" : "AWS::StackName" }, " -r PuppetClientInstance7 ",
            "    --access-key ", { "Ref" : "CFNKeys" },
            "    --secret-key ", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]}, "\n",
            "echo 'q_puppetagent_server=", { "Fn::GetAtt" : [ "PuppetMasterInstance", "PrivateDnsName" ] } ,"' >> /root/answers", "\n",
            "/root/", {"Ref" : "PEId"},"/puppet-enterprise-installer -a /root/answers -D  >& /tmp/pe-install.txt",  "\n",
            "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "PuppetClientWaitHandle" }, "'\n",
            "\n" ]]}}
      }
    },
    "PuppetClientInstance8": {
      "Type": "AWS::EC2::Instance",
      "DependsOn" : "PuppetMasterWaitCondition",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "sources": {
              "/root/":  { "Ref" : "Payload" }
            },
            "files": {
              "/root/answers": {
                "source" : { "Ref" : "AgentAnswersFile" }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": "t1.micro",
        "ImageId": "ami-7f418316",
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups":  [ { "Ref" : "PuppetClientSecurityGroup" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash\n",
            "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
            "    -s ", { "Ref" : "AWS::StackName" }, " -r PuppetClientInstance8 ",
            "    --access-key ", { "Ref" : "CFNKeys" },
            "    --secret-key ", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]}, "\n",
            "echo 'q_puppetagent_server=", { "Fn::GetAtt" : [ "PuppetMasterInstance", "PrivateDnsName" ] } ,"' >> /root/answers", "\n",
            "/root/", {"Ref" : "PEId"},"/puppet-enterprise-installer -a /root/answers -D  >& /tmp/pe-install.txt",  "\n",
            "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "PuppetClientWaitHandle" }, "'\n",
            "\n" ]]}}
      }
    },
    "PuppetClientInstance9": {
      "Type": "AWS::EC2::Instance",
      "DependsOn" : "PuppetMasterWaitCondition",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "sources": {
              "/root/":  { "Ref" : "Payload" }
            },
            "files": {
              "/root/answers": {
                "source" : { "Ref" : "AgentAnswersFile" }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": "t1.micro",
        "ImageId": "ami-7f418316",
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups":  [ { "Ref" : "PuppetClientSecurityGroup" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash\n",
            "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
            "    -s ", { "Ref" : "AWS::StackName" }, " -r PuppetClientInstance9 ",
            "    --access-key ", { "Ref" : "CFNKeys" },
            "    --secret-key ", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]}, "\n",
            "echo 'q_puppetagent_server=", { "Fn::GetAtt" : [ "PuppetMasterInstance", "PrivateDnsName" ] } ,"' >> /root/answers", "\n",
            "/root/", {"Ref" : "PEId"},"/puppet-enterprise-installer -a /root/answers -D  >& /tmp/pe-install.txt",  "\n",
            "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "PuppetClientWaitHandle" }, "'\n",
            "\n" ]]}}
      }
    },
    "PuppetClientInstance10": {
      "Type": "AWS::EC2::Instance",
      "DependsOn" : "PuppetMasterWaitCondition",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "sources": {
              "/root/":  { "Ref" : "Payload" }
            },
            "files": {
              "/root/answers": {
                "source" : { "Ref" : "AgentAnswersFile" }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": "t1.micro",
        "ImageId": "ami-7f418316",
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups":  [ { "Ref" : "PuppetClientSecurityGroup" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash\n",
            "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
            "    -s ", { "Ref" : "AWS::StackName" }, " -r PuppetClientInstance10 ",
            "    --access-key ", { "Ref" : "CFNKeys" },
            "    --secret-key ", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]}, "\n",
            "echo 'q_puppetagent_server=", { "Fn::GetAtt" : [ "PuppetMasterInstance", "PrivateDnsName" ] } ,"' >> /root/answers", "\n",
            "/root/", {"Ref" : "PEId"},"/puppet-enterprise-installer -a /root/answers -D  >& /tmp/pe-install.txt",  "\n",
            "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "PuppetClientWaitHandle" }, "'\n",
            "\n" ]]}}
      }
    },
    "PuppetMasterWaitHandle" : {
       "Type" : "AWS::CloudFormation::WaitConditionHandle",
       "Properties" : {
       }
    },
    "PuppetMasterWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "PuppetMasterInstance",
      "Properties" : {
        "Handle" : { "Ref" : "PuppetMasterWaitHandle" },
        "Timeout" : "600"
      }
    },
    "PuppetClientWaitHandle" : {
       "Type" : "AWS::CloudFormation::WaitConditionHandle",
       "Properties" : {
       }
    },
    "PuppetClientWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "PuppetClientInstance1",
      "Properties" : {
        "Handle" : { "Ref" : "PuppetClientWaitHandle" },
        "Timeout" : "6000",
        "Count" : "10"
      }
    }
  },
  "Outputs" : {
    "PuppetMasterPublicDnsName" : {
      "Value" : { "Fn::GetAtt" : [ "PuppetMasterInstance", "PublicDnsName" ] }
    },
    "PuppetClientPublicDnsName" : {
      "Value" : { "Fn::GetAtt" : [ "PuppetClientInstance1", "PublicDnsName" ] }
    },
    "PuppetClientPublicDnsName" : {
      "Value" : { "Fn::GetAtt" : [ "PuppetClientInstance2", "PublicDnsName" ] }
    },
    "PuppetClientPublicDnsName" : {
      "Value" : { "Fn::GetAtt" : [ "PuppetClientInstance3", "PublicDnsName" ] }
    },
    "PuppetClientPublicDnsName" : {
      "Value" : { "Fn::GetAtt" : [ "PuppetClientInstance4", "PublicDnsName" ] }
    },
    "PuppetClientPublicDnsName" : {
      "Value" : { "Fn::GetAtt" : [ "PuppetClientInstance5", "PublicDnsName" ] }
    },
    "PuppetClientPublicDnsName" : {
      "Value" : { "Fn::GetAtt" : [ "PuppetClientInstance6", "PublicDnsName" ] }
    },
    "PuppetClientPublicDnsName" : {
      "Value" : { "Fn::GetAtt" : [ "PuppetClientInstance7", "PublicDnsName" ] }
    },
    "PuppetClientPublicDnsName" : {
      "Value" : { "Fn::GetAtt" : [ "PuppetClientInstance8", "PublicDnsName" ] }
    },
    "PuppetClientPublicDnsName" : {
      "Value" : { "Fn::GetAtt" : [ "PuppetClientInstance9", "PublicDnsName" ] }
    },
    "PuppetClientPublicDnsName" : {
      "Value" : { "Fn::GetAtt" : [ "PuppetClientInstance10", "PublicDnsName" ] }
    },
    "PuppetMasterPrivateDnsName" : {
      "Value" : { "Fn::GetAtt" : [ "PuppetMasterInstance", "PrivateDnsName" ] }
    }
  }
}
